.template {
    display: none;
}

.selection_inputs_wrapper {
    overflow: auto;
    margin: 0.25rem;
    white-space: nowrap;
}

.selection_inputs_wrapper li {
    display: inline-block;
    margin-right: 0.25rem;
}

.charts_container {
    margin: 0.25rem;
}

hr {
    display: none;
    border: none;
    color: var(--color_primary);
    background-color: var(--color_accent_light);
    width: 100%;
    height: 0.1rem;
    margin: 0 0 0.25rem 0;
}

.charts_container .chart_div:not(:first-of-type) hr {
    display: block;
}

hr.active {
    display: block;
}

.chart_div {
    display: flex;
    flex-direction: column;
    margin-bottom: 0.25rem;
}

.plotly_div {
    background: var(--secondary2);
    height: 30rem;
    width: 60rem;
    /*height: 10rem;
    width: 10rem;*/
    max-width: 100%;
    align-self: center;
}

.plotly {
    transition-property: opacity;
    transition-duration: 0.2s;
    opacity: 100%;
}

.plotly.resizing {
    opacity: 0;
}

.form_div {
    margin-top: 0.25rem;
    overflow: auto;
}

form {
    display: flex;
    align-items: center;
}

form span:not(:first-child) {
    margin-left: 0.5rem;
}

.param_form select {
    margin-left: 0.25rem;
}

.chart_rectangle {
    display: inline-block;
    background: var(--secondary2);
    padding: 0.25rem;
    margin-top: 0.25rem;
    margin-right: 0.25rem;
    border: 0.1rem solid var(--secondary4);
    transition: 0.3s;
    outline: none;
}

.chart_rectangle:hover {
    border-color: var(--accent2);
    transition: 0.3s;
    cursor: pointer;
}

.chart_rectangle.active {
    border-color: var(--accent);
    transition: 0.3s;
}

.chart_settings {
    display: none;
    margin-top: 0.25rem;
    width: 100%;
    border: 0.1rem solid var(--secondary4);
    overflow: hidden;
    background: var(--secondary2);
}

.chart_settings.active {
    display: flex;
}

.chart_settings .chart_data {
    overflow-y: auto;
    max-height: 30rem;
}

.chart_settings .chart_stuff {
    margin-left: 0.25rem;
    max-height: 30rem;
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
}

.chart_settings .stuff_2d_part>div:not(:first-of-type) {
    margin-top: 0.25rem;
}

.chart_stuff form label,
.chart_stuff form input[type="submit"] {
    margin-left: 0.25rem;
}

.chart_stuff form * {
    margin-right: 0.25rem;
}

.chart_stuff form :last-child {
    padding-right: 0.25rem;
}

.chart_settings input[type="checkbox"].chart_checkbox+label::before {
    width: 0.6rem;
    height: 0.6rem;
}

.chart_settings table.checkbox_table th {
    border-top: 0;
}

.chart_settings table.checkbox_table tr td:first-of-type,
.chart_settings table.checkbox_table th:first-of-type {
    border-left: 0;
}

.chart_settings table.checkbox_table tr:last-of-type td {
    border-bottom: 0;
}


/*@media only screen and (max-device-width: 480px) {
    .chart_settings.active {
        flex-direction: column;
    }

    .chart_settings .chart_stuff {
        margin-left: 0;
        margin-top: 0.25rem;
    }

    .chart_settings table.checkbox_table tr:last-of-type td {
        border-bottom: 0.1rem;
    }

    .chart_settings table.checkbox_table tr td:last-of-type {
        border-right: 0;
    }

}*/

.chart_stuff div.header {
    background: var(--secondary3);
    flex: 1;
    padding: 0.15rem 0.25rem;
    border: 0.1rem solid var(--secondary4);
    border-right: 0;
}

.chart_stuff .stuff_2d_part:not(:first-of-type) {
    margin-top: 0.25rem;
}

.chart_stuff .stuff_2d_part:first-of-type div.header {
    border-top: 0;
}

.chart_stuff div.results {
    display: none;
}

.chart_stuff div.imitation_div {
    display: none;
}

.chart_stuff div.results.active,
.chart_stuff div.imitation_div.active {
    display: block;
}

.chart_stuff div.results span {
    margin-right: 0.5rem;
}

/*.chart_stuff .forecast_2d,*/
.chart_stuff .imitation_2d {
    opacity: 50%;
    transition: 0.2s;
}

.chart_stuff .forecast_2d.active{
    opacity: 100%;
    transition: 0.2s;
}

th.invisible_cell {
    opacity: 0%;
    border-top-color: var(--secondary2);
    border-left-color: var(--secondary2);
}

th.invisible_cell:not(.last) {
    border-right-color: var(--secondary2);
}

th.imitation_row_control div {
    display: flex;
    justify-content: center;
}

